name: Terraform Init

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  tfsec-init:
    name: Terraform init
    uses: ${{ github.workspace }}/.github/workflows/terraform-starter.yml@tfsec-job
    with:
      TERRAFORM_VERSION: 1.1.2
      BACKEND_RESOURCE_GROUP_NAME: ${{ secrets.BACKEND_RESOURCE_GROUP }}
      BACKEND_STORAGE_ACCOUNT_NAME: ${{ secrets.BACKEND_STORAGE_ACCOUNT_NAME }}
      BACKEND_CONTAINER_NAME: ${{ secrets.BACKEND_CONTAINER_NAME }}
      ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
      TF_VAR_subscription_id: ${{ secrets.AZ_SUBSCRIPTION_ID }}
      TF_VAR_client_id: ${{ secrets.AZ_CLIENT_ID }}
      TF_VAR_client_secret: ${{ secrets.AZ_CLIENT_SECRET }}
      TF_VAR_tenant_id: ${{ secrets.AZ_TENANT_ID }}    

  tf-validate:
    name: Terraform Validate
    runs-on: ubuntu-latest  

    steps:
    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: |
        sh ${{ github.workspace }}/.github/scripts/tf-tasks.sh fmt

    # Terraform validate
    - name: Terraform Validate
      run: |
        sh ${{ github.workspace }}/.github/scripts/tf-tasks.sh validate

    # Create Terraform Artifact
    - name: Publish Terraform artifact
      uses: actions/upload-artifact@v2
      with:
        name: terraform
        path: |
         ${{ github.workspace }}
         !${{ github.workspace }}/.terraform